# Travis configuration file using the build matrix feature
# Read more under http://docs.travis-ci.com/user/build-configuration/
# THIS SCRIPT IS SUPPOSED TO BE AN EXAMPLE. MODIFY IT ACCORDING TO YOUR NEEDS!

# sudo: false
# language: python
# virtualenv:
#   system_site_packages: false
# matrix:
#   fast_finish: true
#   include:
#     - python: 3.6
#       env: DISTRIB="ubuntu" TOX_PYTHON_VERSION="py36" COVERAGE="true"
#     - env: DISTRIB="conda" PYTHON_VERSION="3.6" COVERAGE="false"
# install:
#   - source tests/travis_install.sh
#   - pip install -r requirements.txt
#   # ^  DEPRECATION WARNING:
#   # The automatic creation of a `requirements.txt` file is deprecated.
#   # See `Dependency Management` in the docs for other options.
# before_script:
#   - git config --global user.email "you@example.com"
#   - git config --global user.name "Your Name"
# script:
#   - python setup.py develop
#   - tox
#   - |
#     if [[ "$COVERAGE" == "true" ]]; then
#       pre-commit install
#       pre-commit run --all-files
#     fi
# after_success:
#   - if [[ "$COVERAGE" == "true" ]]; then coveralls || echo "failed"; fi
# after_script:
#   - travis-cleanup
# cache:
#   pip: true
#   directories:
#     - $HOME/miniconda

language: python
os: linux
dist: xenial

matrix:
  include:
    - python: "3.5"
      env: NOXSESSION="tests-3.5"
    - python: "3.6"
      env: NOXSESSION="tests-3.6"
    - python: "3.7"
      env: NOXSESSION="tests-3.7"
    - os: windows
      language: bash
      env: NOXSESSION="tests-3.7"
      before_install:
        - export TRAVIS_PYTHON_VERSION=3.7
        - choco install python --version $TRAVIS_PYTHON_VERSION
        - export PATH="/C/Python37:/C/Python37/Scripts:$PATH"
install:
  # - pip install --upgrade pip setuptools
  - pip install nox

before_script:
  - git config --global user.email "you@example.com"
  - git config --global user.name "Your Name"

script:
  - nox --non-interactive --session "$NOXSESSION"
  - |
    if [[ "$COVERAGE" == "true" ]]; then
      pre-commit install
      pre-commit run --all-files
    fi
after_success:
  - if [[ "$COVERAGE" == "true" ]]; then coveralls || echo "failed"; fi
after_script:
  - coveralls
  - coverage report
  - travis-cleanup
cache:
  pip: true
